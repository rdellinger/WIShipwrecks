@model IEnumerable<WIShipwrecks.Models.Attraction>
@using WIShipwrecks.Models


@{
    Layout = "~/Views/Shared/_List.cshtml";
    ViewBag.Title = "Attractions";
}


<header class="title one"><span style="color:#fd853f;">Attractions</span></header>
<div class="spacer"></div>

<div style="margin-top:30px;"></div>



<p>
    @if (User.IsInRole("Administrator") || User.IsInRole("Shipwrecks Administrator"))
    {
        @*Create button creates a new record automatically, then navigates to the edit form*@
        using (Html.BeginForm("Create", "Attraction", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="AttractionName" value="(No name provided)">
            <input type="submit" value="Create New" class="btn btn-success btn-sm" />
        }
    }

    <br />

    @using (Html.BeginForm("Index", "Attraction", FormMethod.Get, new { @class = "form-inline", role = "form" }))
    {
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            <label class="sr-only" for="SearchString">Attraction Name</label>
            @Html.TextBox("SearchString", "", new { @class = "form-control", placeholder = "Attraction name", type = "text" })
        </div>

        <div class="form-group col-lg-2 col-md-2 col-sm-2">
            <label class="sr-only" for="county">County</label>
            @Html.DropDownList("county", null, "All Counties", new { @class = "form-control" })
        </div>

        <div class="form-group col-lg-2 col-md-2 col-sm-2">
            <label class="sr-only" for="nearestCity">Nearest City</label>
            @Html.DropDownList("nearestCity", null, "All Cities", new { @class = "form-control" })
        </div>

        <div class="form-group col-lg-1 col-md-1 col-sm-2">
            <button type="submit" value="Search" id="attractionSearchButton" class="btn btn-default btn-sm btn-info">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>

        <div class="form-group col-lg-2 col-md-2 col-sm-2">
            @Html.ActionLink("View All", "Index")
        </div>
    }

    <br />
    <br />

</p>


    @*If there are any results, then show them*@
    @if (Model.Count() > 0)
    {

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.AttractionName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                @if (User.IsInRole("Administrator") || User.IsInRole("Shipwrecks Administrator"))
                {
                    <th></th>
                }

            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td width="250px">
                        @if (!String.IsNullOrEmpty(Request.QueryString["attractionType"]))
                        {
                            <a href="@Url.Action("Details", "Attraction", new { id = item.ID, attractionType = Request.QueryString["attractionType"] })">
                                @Html.DisplayFor(modelItem => item.AttractionName)
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Details", "Attraction", new { id = item.ID, region = "Index" })">
                                @Html.DisplayFor(modelItem => item.AttractionName)
                            </a>
                        }
                    </td>
                    <td>
                        @*Truncate the text*@
                        @Html.Raw((item.Description).TrimIfLongerThan(300))
                    </td>
                    @if (User.IsInRole("Administrator") || User.IsInRole("Shipwrecks Administrator"))
                    {
                        <td width="70px">
                            <a href="@Url.Action("Edit", "Attraction", new { id = item.ID })" class="btn btn-info btn-xs">
                                <span class="glyphicon glyphicon-pencil"></span>
                            </a>
                            <a href="@Url.Action("Delete", "Attraction", new { id = item.ID })" class="btn btn-danger btn-xs">
                                <span class="glyphicon glyphicon-trash"></span>
                            </a>
                        </td>
                    }

                </tr>
            }

        </table>

    }

    @*Otherwise, show the 'no records' message*@
    else
    {
        <div style="margin: 40px 0 0 0;">Sorry, we couldn't find an attraction called <em>@Request.QueryString["SearchString"]</em> that matches your search criteria.</div>
    }




    @section Scripts {
        @Scripts.Render("~/Scripts/attraction.js")
    }